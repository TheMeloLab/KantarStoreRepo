// <auto-generated />
using System;
using KantarStore.Infrastructure.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KantarStore.Infrastructure.Migrations
{
    [DbContext(typeof(KantarStoreDBContext))]
    [Migration("20251002074654_AddBasketStatusField")]
    partial class AddBasketStatusField
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KantarStore.Domain.Entities.Basket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("KantarStore.Domain.Entities.BasketItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BasketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BasketId");

                    b.ToTable("BasketItems");
                });

            modelBuilder.Entity("KantarStore.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("VoucherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VoucherId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("KantarStore.Domain.Entities.Voucher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MultiBuyOfferDiffentProduct_ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("MultiBuyOfferSameProduct_Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("MultiBuyPercentageDiscountDifferentProduct_Percentage")
                        .HasColumnType("int");

                    b.Property<Guid?>("MultiBuyPercentageDiscountDifferentProduct_ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("MultiBuyPercentageDiscountDifferentProduct_Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("MultiBuyPercentageDiscountSameProduct_Percentage")
                        .HasColumnType("int");

                    b.Property<int?>("MultiBuyPercentageDiscountSameProduct_Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("PercentageDiscountOnDifferentProduct_Percentage")
                        .HasColumnType("int");

                    b.Property<Guid?>("PercentageDiscountOnDifferentProduct_ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("PercentageDiscountOnSameProduct")
                        .HasColumnType("int");

                    b.Property<int>("VoucherConfig")
                        .HasColumnType("int");

                    b.Property<string>("VoucherDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("KantarStore.Domain.Entities.BasketItem", b =>
                {
                    b.HasOne("KantarStore.Domain.Entities.Basket", "Basket")
                        .WithMany()
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Basket");
                });

            modelBuilder.Entity("KantarStore.Domain.Entities.Product", b =>
                {
                    b.HasOne("KantarStore.Domain.Entities.Voucher", "Voucher")
                        .WithMany()
                        .HasForeignKey("VoucherId");

                    b.Navigation("Voucher");
                });
#pragma warning restore 612, 618
        }
    }
}
